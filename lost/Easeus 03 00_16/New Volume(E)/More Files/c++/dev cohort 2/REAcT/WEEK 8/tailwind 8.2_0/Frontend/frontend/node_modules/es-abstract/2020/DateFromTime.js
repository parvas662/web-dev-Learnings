 && node.quasis.at(-1).range[0] === node.quasis.at(-1).range[1];
    }
    return node.type !== "Literal" || typeof node.value !== "string";
}

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

/** @type {import('../shared/types').Rule} */
module.exports = {
    meta: {
        type: "suggestion",

        docs: {
            description: "Require template literals instead of string concatenation",
            recommended: false,
            url: "https://eslint.org/docs/latest/rules/prefer-template"
        },

        schema: [],
        fixable: "code",

        messages: {
            unexpectedStringConcatenation: "Unexpected string concatenation."
        }
    },

    create(context) {
        const sourceCode = context.sourceCode;
        let done = Object.create(null);

        /**
         * Gets the non-token text between two nodes, 