checked.
         *
         * Returns `false` if the reference is:
         * - initialization's (e.g., `let a = 1`).
         * - referring to an undefined variable (i.e., if it's an unresolved reference).
         * - referring to a variable that is defined, but not in the given source code
         *   (e.g., global environment variable or `arguments` in functions).
         * - allowed by options.
         * @param {eslint-scope.Reference} reference The reference
         * @returns {boolean} `true` if the reference should be checked
         */
        function shouldCheck(reference) {
            if (reference.init) {
                return false;
            }

            const { identifier } = reference;

            if (
                options.allowNamedExports &&
                identifier.parent.type === "ExportSpecifier" &&
                identifier.parent.local === identifier
            ) {
                return false;
            }

            const variable = reference.resolved;

            if (!variable || variable.defs.length === 0) {
    