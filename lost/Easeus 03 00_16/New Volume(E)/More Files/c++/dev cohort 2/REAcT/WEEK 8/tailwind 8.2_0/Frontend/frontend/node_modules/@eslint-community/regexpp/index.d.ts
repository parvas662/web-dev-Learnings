1287619200, E: 1291248e3, F: 1296777600, A: 1299542400, B: 1303862400, C: 1307404800, L: 1312243200, M: 1316131200, G: 1316131200, N: 1319500800, O: 1323734400, P: 1328659200, JB: 1332892800, y: 133704e4, z: 1340668800, KB: 1361404800, LB: 1364428800, MB: 1369094400, NB: 1374105600, OB: 1376956800, PB: 1384214400, QB: 1389657600, RB: 1392940800, SB: 1397001600, TB: 1400544e3, UB: 1405468800, VB: 1409011200, WB: 141264e4, XB: 1416268800, YB: 1421798400, ZB: 1425513600, aB: 1429401600, bB: 143208e4, cB: 1437523200, dB: 1441152e3, eB: 1444780800, fB: 1449014400, gB: 1453248e3, hB: 1456963200, iB: 1460592e3, jB: 1464134400, kB: 1469059200, lB: 1472601600, mB: 1476230400, nB: 1480550400, oB: 1485302400, pB: 1489017600, qB: 149256e4, HC: 1496707200, rB: 1500940800, IC: 1504569600, sB: 1508198400, tB: 1512518400, uB: 1516752e3, vB: 1520294400, wB: 1523923200, xB: 1527552e3, yB: 1532390400, zB: 1536019200, "0B": 1539648e3, "1B": 1543968e3, "2B": 154872e4, "3B": 1552348800, "4B": 1555977600, "5B": 1559606400, "6B": 1564444800, "7B": 1568073600, "8B": 1571702400, Q: 1575936e3, H: 1580860800, R: 1586304e3, S: 1589846400, T: 1594684800, U: 1598313600, V: 1601942400, W: 1605571200, X: 1611014400, Y: 1614556800, Z: 1618272e3, a: 1621987200, b: 1626739200, c: 1630368e3, d: 1632268800, e: 1634601600, f: 1637020800, g: 1641340800, h: 1643673600, i: 1646092800, j: 1648512e3, k: 1650931200, l: 1653350400, m: 1655769600, n: 1659398400, o: 1661817600, p: 1664236800, q: 1666656e3, r: 166968e4, s: 1673308800, t: 1675728e3, u: 1678147200, v: 1680566400, w: 1682985600, x: 1685404800, AB: 1705968e3, BB: 1708387200, CB: 1710806400, DB: 1713225600, EB: 1715644800, FB: 1718064e3, GB: 1721174400, HB: 1724112e3, I: 1726531200, "9B": null, KC: null, LC: null } }, E: { A: { J: 0, IB: 0, K: 0, D: 0, E: 0, F: 3583e-6, A: 0, B: 0, C: 0, L: 7166e-6, M: 0.028664, G: 7166e-6, kC: 0, MC: 0, lC: 0, mC: 0, nC: 0, oC: 0, NC: 0, AC: 7166e-6, BC: 0.010749, pC: 0.057328, qC: 0.078826, rC: 0.025081, OC: 0.010749, PC: 0.021498, CC: 0.028664, sC: 0.218563, DC: 0.028664, QC: 0.03583, RC: 0.032247, SC: 0.182733, TC: 0.021498, UC: 0.042996, tC: 0.290223, EC: 0.017915, VC: 0.039413, WC: 0.039413, XC: 0.042996, YC: 0.118239, ZC: 1.44753, aC: 0.415628, FC: 0.017915, bC: 0, uC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "kC", "MC", "J", "IB", "lC", "K", "mC", "D", "nC", "E", "F", "oC", "A", "NC", "B", "AC", "C", "BC", "L", "pC", "M", "qC", "G", "rC", "OC", "PC", "CC", "sC", "DC", "QC", "RC", "SC", "TC", "UC", "tC", "EC", "VC", "WC", "XC", "YC", "ZC", "aC", "FC", "bC", "uC", ""], E: "Safari", F: { kC: 1205798400, MC: 1226534400, J: 1244419200, IB: 1275868800, lC: 131112e4, K: 1343174400, mC: 13824e5, D: 13824e5, nC: 1410998400, E: 1413417600, F: 1443657600, oC: 1458518400, A: 1474329600, NC: 1490572800, B: 1505779200, AC: 1522281600, C: 1537142400, BC: 1553472e3, L: 1568851200, pC: 1585008e3, M: 1600214400, qC: 1619395200, G: 1632096e3, rC: 1635292800, OC: 1639353600, PC: 1647216e3, CC: 1652745600, sC: 1658275200, DC: 1662940800, QC: 1666569600, RC: 1670889600, SC: 1674432e3, TC: 1679875200, UC: 1684368e3, tC: 1690156800, EC: 1695686400, VC: 1698192e3, WC: 1702252800, XC: 1705881600, YC: 1709596800, ZC: 1715558400, aC: 1722211200, FC: 1726444800, bC: null, uC: null } }, F: { A: { "0": 0, "1": 0, "2": 0, "3": 0, F: 0, B: 0, C: 0, G: 0, N: 0, O: 0, P: 0, JB: 0, y: 0, z: 0, KB: 0, LB: 0, MB: 0, NB: 0, OB: 0, PB: 0, QB: 0, RB: 0, SB: 0, TB: 0, UB: 0, VB: 0, WB: 0, XB: 0, YB: 3583e-6, ZB: 0, aB: 0, bB: 0, cB: 0, dB: 0, eB: 0.017915, fB: 0, gB: 0, hB: 0, iB: 0, jB: 0, kB: 0, lB: 0, mB: 0, nB: 0, oB: 0, pB: 0, qB: 0, rB: 0, sB: 0, tB: 0, uB: 0, vB: 0, wB: 0, xB: 0, yB: 0, zB: 0, "0B": 0, "1B": 0, "2B": 0, "3B": 0, "4B": 0, "5B": 0, "6B": 0, "7B": 0, "8B": 0, Q: 0, H: 0, R: 0, JC: 0, S: 0.028664, T: 3583e-6, U: 0, V: 0, W: 0, X: 0, Y: 0, Z: 0, a: 0, b: 0, c: 0, d: 0, e: 0.039413, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0.032247, m: 0, n: 0, o: 0, p: 0, q: 0, r: 0, s: 0.154069, t: 0, u: 0.060911, v: 0, w: 0, x: 0, vC: 0, wC: 0, xC: 0, yC: 0, AC: 0, cC: 0, zC: 0, BC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "F", "vC", "wC", "xC", "yC", "B", "AC", "cC", "zC", "C", "BC", "G", "N", "O", "P", "JB", "y", "z", "0", "1", "2", "3", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "lB", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "tB", "uB", "vB", "wB", "xB", "yB", "zB", "0B", "1B", "2B", "3B", "4B", "5B", "6B", "7B", "8B", "Q", "H", "R", "JC", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "", "", ""], E: "Opera", F: { "0": 1401753600, "1": 1405987200, "2": 1409616e3, "3": 1413331200, F: 1150761600, vC: 1223424e3, wC: 1251763200, xC: 1267488e3, yC: 1277942400, B: 1292457600, AC: 1302566400, cC: 1309219200, zC: 1323129600, C: 1323129600, BC: 1352073600, G: 1372723200, N: 1377561600, O: 1381104e3, P: 1386288e3, JB: 1390867200, y: 1393891200, z: 1399334400, KB: 1417132800, LB: 1422316800, MB: 1425945600, NB: 1430179200, OB: 1433808e3, PB: 1438646400, QB: 1442448e3, RB: 1445904e3, SB: 1449100800, TB: 1454371200, UB: 1457308800, VB: 146232e4, WB: 1465344e3, XB: 1470096e3, YB: 1474329600, ZB: 1477267200, aB: 1481587200, bB: 1486425600, cB: 1490054400, dB: 1494374400, eB: 1498003200, fB: 1502236800, gB: 1506470400, hB: 1510099200, iB: 1515024e3, jB: 1517961600, kB: 1521676800, lB: 1525910400, mB: 1530144e3, nB: 1534982400, oB: 1537833600, pB: 1543363200, qB: 1548201600, rB: 1554768e3, sB: 1561593600, tB: 1566259200, uB: 1570406400, vB: 1573689600, wB: 1578441600, xB: 1583971200, yB: 1587513600, zB: 1592956800, "0B": 1595894400, "1B": 1600128e3, "2B": 1603238400, "3B": 161352e4, "4B": 1612224e3, "5B": 1616544e3, "6B": 1619568e3, "7B": 1623715200, "8B": 1627948800, Q: 1631577600, H: 1633392e3, R: 1635984e3, JC: 1638403200, S: 1642550400, T: 1644969600, U: 1647993600, V: 1650412800, W: 1652745600, X: 1654646400, Y: 1657152e3, Z: 1660780800, a: 1663113600, b: 1668816e3, c: 1668643200, d: 1671062400, e: 1675209600, f: 1677024e3, g: 1679529600, h: 1681948800, i: 1684195200, j: 1687219200, k: 1690329600, l: 1692748800, m: 1696204800, n: 169992e4, o: 169992e4, p: 1702944e3, q: 1707264e3, r: 1710115200, s: 1711497600, t: 1716336e3, u: 1719273600, v: 1721088e3, w: 1724284800, x: 1727222400 }, D: { F: "o", B: "o", C: "o", vC: "o", wC: "o", xC: "o", yC: "o", AC: "o", cC: "o", zC: "o", BC: "o" } }, G: { A: { E: 0, MC: 0, "0C": 0, dC: 447708e-8, "1C": 149236e-8, "2C": 746181e-8, "3C": 895417e-8, "4C": 0, "5C": 746181e-8, "6C": 0.0298472, "7C": 895417e-8, "8C": 0.0462632, "9C": 0.117897, AD: 0.0149236, BD: 0.0119389, CD: 0.199976, DD: 298472e-8, ED: 0.0656639, FD: 895417e-8, GD: 0.037309, HD: 0.152221, ID: 0.105958, JD: 0.0567097, OC: 0.0567097, PC: 0.0671563, CC: 0.0790952, KD: 0.741704, DC: 0.150729, QC: 0.317873, RC: 0.15819, SC: 0.264148, TC: 0.0656639, UC: 0.10745, LD: 0.920787, EC: 0.0850646, VC: 0.131328, WC: 0.120881, XC: 0.179083, YC: 0.419354, ZC: 8.55869, aC: 1.44162, FC: 0.156698, bC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "MC", "0C", "dC", "1C", "2C", "3C", "E", "4C", "5C", "6C", "7C", "8C", "9C", "AD", "BD", "CD", "DD", "ED", "FD", "GD", "HD", "ID", "JD", "OC", "PC", "CC", "KD", "DC", "QC", "RC", "SC", "TC", "UC", "LD", "EC", "VC", "WC", "XC", "YC", "ZC", "aC", "FC", "bC", "", ""], E: "Safari on iOS", F: { MC: 1270252800, "0C": 1283904e3, dC: 1299628800, "1C": 1331078400, "2C": 1359331200, "3C": 1394409600, E: 1410912e3, "4C": 1413763200, "5C": 1442361600, "6C": 1458518400, "7C": 1473724800, "8C": 1490572800, "9C": 1505779200, AD: 1522281600, BD: 1537142400, CD: 1553472e3, DD: 1568851200, ED: 1572220800, FD: 1580169600, GD: 1585008e3, HD: 1600214400, ID: 1619395200, JD: 1632096e3, OC: 1639353600, PC: 1647216e3, CC: 1652659200, KD: 1658275200, DC: 1662940800, QC: 1666569600, RC: 1670889600, SC: 1674432e3, TC: 1679875200, UC: 1684368e3, LD: 1690156800, EC: 1694995200, VC: 1698192e3, WC: 1702252800, XC: 1705881600, YC: 1709596800, ZC: 1715558400, aC: 1722211200, FC: 1726444800, bC: null } }, H: { A: { MD: 0.05 }, B: "opera Mini", F: { MD: 1426464e3 } }, I: { A: { GC: 0, J: 327216e-10, I: 0.326169, ND: 0, OD: 0, PD: 0, QD: 130886e-9, dC: 130886e-9, RD: 0, SD: 523546e-9 }, B: "webkitdC", "RD", "SD", "I", "", "", ""], E: "Android Browser", F: { ND: 1256515200, OD: 1274313600, PD: 1291593600, GC: 1298332800, J: 1318896e3, QD: 1341792e3, dC: 1374624e3, RD: 1386547200, SD: 1401667200, I: 1726531200 } }, J: { A: { D: 0, A: 0 }, B: "webkitlackberry Browser", F: { D: 1325376e3, A: 1359504e3 } }, K: { A: { A: 0, B: 0, C: 0, H: 1.24603, AC: 0, cC: 0, BC: 0 }, B: "ocC", "C", "BC", "H", "", "", ""], E: "Opera Mobile", F: { A: 1287100800, B: 1300752e3, AC: 1314835200, cC: 1318291200, C: 1330300800, BC: 1349740800, H: 1709769600 }, D: { H: "webkit" } }, L: { A: { I: 44.331 }, B: "webkithrome for Android", F: { I: 1726531200 } }, M: { A: { "9B": 0.365712 }, B: "mozirefox for Android", F: { "9B": 1725321600 } }, N: { A: { A: 0, B: 0 }, B: "msobile", F: { A: 1340150400, B: 1353456e3 } }, O: { A: { CC: 1.13563 }, B: "webkitrowser for Android", F: { CC: 1710115200 }, D: { CC: "webkit" } }, P: { A: { "0": 0.0647361, "1": 0.0647361, "2": 0.0755255, "3": 1.27314, J: 0.0971042, y: 0.0215787, z: 0.0431574, TD: 0.0107894, UD: 0.0107894, VD: 0.0323681, WD: 0, XD: 0, NC: 0, YD: 0.0107894, ZD: 0, aD: 0.0107894, bD: 0, cD: 0, DC: 0, EC: 0.0215787, FC: 0, dD: 0.0215787 }, B: "webkitaD", "bD", "cD", "DC", "EC", "FC", "dD", "y", "z", "0", "1", "2", "3", "", "", ""], E: "Samsung Internet", F: { "0": 1689292800, "1": 1697587200, "2": 1711497600, "3": 1715126400, J: 1461024e3, TD: 1481846400, UD: 1509408e3, VD: 1528329600, WD: 1546128e3, XD: 1554163200, NC: 1567900800, YD: 1582588800, ZD: 1593475200, aD: 1605657600, bD: 1618531200, cD: 1629072e3, DC: 1640736e3, EC: 1651708800, FC: 1659657600, dD: 1667260800, y: 1677369600, z: 1684454400 } }, Q: { A: { eD: 0.3208 }, B: "webkiteD", "", "", ""], E: "QQ Browser", F: { eD: 1710288e3 } }, R: { A: { fD: 0 }, B: "webkitfD", "", "", ""], E: "Baidu Browser", F: { fD: 1710201600 } }, S: { A: { gD: 0.051328, hD: 0 }, B: "mozgD", "hD", "", "", ""], E: "KaiOS Browser", F: { gD: 1527811200, hD: 1631664e3 } } };
  }
});

// node_modules/caniuse-lite/dist/unpacker/agents.js
var require_agents2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/agents.js"(exports2, module2) {
    "use strict";
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var agentsData = require_agents();
    function unpackBrowserVersions(versionsData) {
      return Object.keys(versionsData).reduce((usage, version) => {
        usage[versions[version]] = versionsData[version];
        return usage;
      }, {});
    }
    module2.exports.agents = Object.keys(agentsData).reduce((map, key) => {
      let versionsData = agentsData[key];
      map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {
        if (entry === "A") {
          data.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "C") {
          data.versions = versionsData[entry].reduce((list, version) => {
            if (version === "") {
              list.push(null);
            } else {
              list.push(versions[version]);
            }
            return list;
          }, []);
        } else if (entry === "D") {
          data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "E") {
          data.browser = versionsData[entry];
        } else if (entry === "F") {
          data.release_date = Object.keys(versionsData[entry]).reduce(
            (map2, key2) => {
              map2[versions[key2]] = versionsData[entry][key2];
              return map2;
            },
            {}
          );
        } else {
          data.prefix = versionsData[entry];
        }
        return data;
      }, {});
      return map;
    }, {});
  }
});

// node_modules/electron-to-chromium/versions.js
var require_versions = __commonJS({
  "node_modules/electron-to-chromium/versions.js"(exports2, module2) {
    module2.exports = {
      "0.20": "39",
      "0.21": "41",
      "0.22": "41",
      "0.23": "41",
      "0.24": "41",
      "0.25": "42",
      "0.26": "42",
      "0.27": "43",
      "0.28": "43",
      "0.29": "43",
      "0.30": "44",
      "0.31": "45",
      "0.32": "45",
      "0.33": "45",
      "0.34": "45",
      "0.35": "45",
      "0.36": "47",
      "0.37": "49",
      "1.0": "49",
      "1.1": "50",
      "1.2": "51",
      "1.3": "52",
      "1.4": "53",
      "1.5": "54",
      "1.6": "56",
      "1.7": "58",
      "1.8": "59",
      "2.0": "61",
      "2.1": "61",
      "3.0": "66",
      "3.1": "66",
      "4.0": "69",
      "4.1": "69",
      "4.2": "69",
      "5.0": "73",
      "6.0": "76",
      "6.1": "76",
      "7.0": "78",
      "7.1": "78",
      "7.2": "78",
      "7.3": "78",
      "8.0": "80",
      "8.1": "80",
      "8.2": "80",
      "8.3": "80",
      "8.4": "80",
      "8.5": "80",
      "9.0": "83",
      "9.1": "83",
      "9.2": "83",
      "9.3": "83",
      "9.4": "83",
      "10.0": "85",
      "10.1": "85",
      "10.2": "85",
      "10.3": "85",
      "10.4": "85",
      "11.0": "87",
      "11.1": "87",
      "11.2": "87",
      "11.3": "87",
      "11.4": "87",
      "11.5": "87",
      "12.0": "89",
      "12.1": "89",
      "12.2": "89",
      "13.0": "91",
      "13.1": "91",
      "13.2": "91",
      "13.3": "91",
      "13.4": "91",
      "13.5": "91",
      "13.6": "91",
      "14.0": "93",
      "14.1": "93",
      "14.2": "93",
      "15.0": "94",
      "15.1": "94",
      "15.2": "94",
      "15.3": "94",
      "15.4": "94",
      "15.5": "94",
      "16.0": "96",
      "16.1": "96",
      "16.2": "96",
      "17.0": "98",
      "17.1": "98",
      "17.2": "98",
      "17.3": "98",
      "17.4": "98",
      "18.0": "100",
      "18.1": "100",
      "18.2": "100",
      "18.3": "100",
      "19.0": "102",
      "19.1": "102",
      "20.0": "104",
      "20.1": "104",
      "20.2": "104",
      "20.3": "104",
      "21.0": "106",
      "21.1": "106",
      "21.2": "106",
      "21.3": "106",
      "21.4": "106",
      "22.0": "108",
      "22.1": "108",
      "22.2": "108",
      "22.3": "108",
      "23.0": "110",
      "23.1": "110",
      "23.2": "110",
      "23.3": "110",
      "24.0": "112",
      "24.1": "112",
      "24.2": "112",
      "24.3": "112",
      "24.4": "112",
      "24.5": "112",
      "24.6": "112",
      "24.7": "112",
      "24.8": "112",
      "25.0": "114",
      "25.1": "114",
      "25.2": "114",
      "25.3": "114",
      "25.4": "114",
      "25.5": "114",
      "25.6": "114",
      "25.7": "114",
      "25.8": "114",
      "25.9": "114",
      "26.0": "116",
      "26.1": "116",
      "26.2": "116",
      "26.3": "116",
      "26.4": "116",
      "26.5": "116",
      "26.6": "116",
      "27.0": "118",
      "27.1": "118",
      "27.2": "118",
      "27.3": "118",
      "28.0": "120",
      "28.1": "120",
      "28.2": "120",
      "28.3": "120",
      "29.0": "122",
      "29.1": "122",
      "29.2": "122",
      "29.3": "122",
      "29.4": "122",
      "30.0": "124",
      "30.1": "124",
      "30.2": "124",
      "30.3": "124",
      "30.4": "124",
      "30.5": "124",
      "31.0": "126",
      "31.1": "126",
      "31.2": "126",
      "31.3": "126",
      "31.4": "126",
      "31.5": "126",
      "31.6": "126",
      "32.0": "128",
      "32.1": "128",
      "32.2": "128",
      "33.0": "130",
      "34.0": "131"
    };
  }
});

// node_modules/node-releases/data/release-schedule/release-schedule.json
var require_release_schedule = __commonJS({
  "node_modules/node-releases/data/release-schedule/release-schedule.json"(exports2, module2) {
    module2.exports = { "v0.8": { start: "2012-06-25", end: "2014-07-31" }, "v0.10": { start: "2013-03-11", end: "2016-10-31" }, "v0.12": { start: "2015-02-06", end: "2016-12-31" }, v4: { start: "2015-09-08", lts: "2015-10-12", maintenance: "2017-04-01", end: "2018-04-30", codename: "Argon" }, v5: { start: "2015-10-29", maintenance: "2016-04-30", end: "2016-06-30" }, v6: { start: "2016-04-26", lts: "2016-10-18", maintenance: "2018-04-30", end: "2019-04-30", codename: "Boron" }, v7: { start: "2016-10-25", maintenance: "2017-04-30", end: "2017-06-30" }, v8: { start: "2017-05-30", lts: "2017-10-31", maintenance: "2019-01-01", end: "2019-12-31", codename: "Carbon" }, v9: { start: "2017-10-01", maintenance: "2018-04-01", end: "2018-06-30" }, v10: { start: "2018-04-24", lts: "2018-10-30", maintenance: "2020-05-19", end: "2021-04-30", codename: "Dubnium" }, v11: { start: "2018-10-23", maintenance: "2019-04-22", end: "2019-06-01" }, v12: { start: "2019-04-23", lts: "2019-10-21", maintenance: "2020-11-30", end: "2022-04-30", codename: "Erbium" }, v13: { start: "2019-10-22", maintenance: "2020-04-01", end: "2020-06-01" }, v14: { start: "2020-04-21", lts: "2020-10-27", maintenance: "2021-10-19", end: "2023-04-30", codename: "Fermium" }, v15: { start: "2020-10-20", maintenance: "2021-04-01", end: "2021-06-01" }, v16: { start: "2021-04-20", lts: "2021-10-26", maintenance: "2022-10-18", end: "2023-09-11", codename: "Gallium" }, v17: { start: "2021-10-19", maintenance: "2022-04-01", end: "2022-06-01" }, v18: { start: "2022-04-19", lts: "2022-10-25", maintenance: "2023-10-18", end: "2025-04-30", codename: "Hydrogen" }, v19: { start: "2022-10-18", maintenance: "2023-04-01", end: "2023-06-01" }, v20: { start: "2023-04-18", lts: "2023-10-24", maintenance: "2024-10-22", end: "2026-04-30", codename: "Iron" }, v21: { start: "2023-10-17", maintenance: "2024-04-01", end: "2024-06-01" }, v22: { start: "2024-04-24", lts: "2024-10-29", maintenance: "2025-10-21", end: "2027-04-30", codename: "" }, v23: { start: "2024-10-15", maintenance: "2025-04-01", end: "2025-06-01" }, v24: { start: "2025-04-22", lts: "2025-10-28", maintenance: "2026-10-20", end: "2028-04-30", codename: "" } };
  }
});

// node_modules/browserslist/error.js
var require_error = __commonJS({
  "node_modules/browserslist/error.js"(exports2, module2) {
    function BrowserslistError(message) {
      this.name = "BrowserslistError";
      this.message = message;
      this.browserslist = true;
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, BrowserslistError);
      }
    }
    BrowserslistError.prototype = Error.prototype;
    module2.exports = BrowserslistError;
  }
});

// node_modules/caniuse-lite/dist/lib/statuses.js
var require_statuses = __commonJS({
  "node_modules/caniuse-lite/dist/lib/statuses.js"(exports2, module2) {
    module2.exports = {
      1: "ls",
      // WHATWG Living Standard
      2: "rec",
      // W3C Recommendation
      3: "pr",
      // W3C Proposed Recommendation
      4: "cr",
      // W3C Candidate Recommendation
      5: "wd",
      // W3C Working Draft
      6: "other",
      // Non-W3C, but reputable
      7: "unoff"
      // Unofficial, Editor's Draft or W3C "Note"
    };
  }
});

// node_modules/caniuse-lite/dist/lib/supported.js
var require_supported = __commonJS({
  "node_modules/caniuse-lite/dist/lib/supported.js"(exports2, module2) {
    module2.exports = {
      y: 1 << 0,
      n: 1 << 1,
      a: 1 << 2,
      p: 1 << 3,
      u: 1 << 4,
      x: 1 << 5,
      d: 1 << 6
    };
  }
});

// node_modules/caniuse-lite/dist/unpacker/feature.js
var require_feature = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/feature.js"(exports2, module2) {
    "use strict";
    var statuses = require_statuses();
    var supported = require_supported();
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var MATH2LOG = Math.log(2);
    function unpackSupport(cipher) {
      let stats = Object.keys(supported).reduce((list, support) => {
        if (cipher & supported[support]) list.push(support);
        return list;
      }, []);
      let notes = cipher >> 7;
      let notesArray = [];
      while (notes) {
        let note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift(`#${note}`);
        notes -= Math.pow(2, note - 1);
      }
      return stats.concat(notesArray).join(" ");
    }
    function unpackFeature(packed) {
      let unpacked = {
        status: statuses[packed.B],
        title: packed.C,
        shown: packed.D
      };
      unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
        let browser = packed.A[key];
        browserStats[browsers[key]] = Object.keys(browser).reduce(
          (stats, support) => {
            let packedVersions = browser[support].split(" ");
            let unpacked2 = unpackSupport(support);
            packedVersions.forEach((v) => stats[versions[v]] = unpacked2);
            return stats;
          },
          {}
        );
        return browserStats;
      }, {});
      return unpacked;
    }
    module2.exports = unpackFeature;
    module2.exports.default = unpackFeature;
  }
});

// node_modules/caniuse-lite/dist/unpacker/region.js
var require_region = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/region.js"(exports2, module2) {
    "use strict";
    var browsers = require_browsers2().browsers;
    function unpackRegion(packed) {
      return Object.keys(packed).reduce((list, browser) => {
        let data = packed[browser];
        list[browsers[browser]] = Object.keys(data).reduce((memo, key) => {
          let stats = data[key];
          if (key === "_") {
            stats.split(" ").forEach((version) => memo[version] = null);
          } else {
            memo[key] = stats;
          }
          return memo;
        }, {});
        return list;
      }, {});
    }
    module2.exports = unpackRegion;
    module2.exports.default = unpackRegion;
  }
});

// node_modules/browserslist/node.js
var require_node2 = __commonJS({
  "node_modules/browserslist/node.js"(exports2, module2) {
    var feature = require_feature().default;
    var region = require_region().default;
    var fs = require("fs");
    var path = require("path");
    var BrowserslistError = require_error();
    var IS_SECTION = /^\s*\[(.+)]\s*$/;
    var CONFIG_PATTERN = /^browserslist-config-/;
    var SCOPED_CONFIG__PATTERN = /@[^/]+(?:\/[^/]+)?\/browserslist-config(?:-|$|\/)/;
    var TIME_TO_UPDATE_CANIUSE = 6 * 30 * 24 * 60 * 60 * 1e3;
    var FORMAT = "Browserslist config should be a string or an array of strings with browser queries";
    var dataTimeChecked = false;
    var filenessCache = {};
    var configCache = {};
    function checkExtend(name) {
      var use = " Use `dangerousExtend` option to disable.";
      if (!CONFIG_PATTERN.test(name) && !SCOPED_CONFIG__PATTERN.test(name)) {
        throw new BrowserslistError(
          "Browserslist config needs `browserslist-config-` prefix. " + use
        );
      }
      if (name.replace(/^@[^/]+\//, "").indexOf(".") !== -1) {
        throw new BrowserslistError(
          "`.` not allowed in Browserslist config name. " + use
        );
      }
      if (name.indexOf("node_modules") !== -1) {
        throw new BrowserslistError(
          "`node_modules` not allowed in Browserslist config." + use
        );
      }
    }
    function isFile(file) {
      if (file in filenessCache) {
        return filenessCache[file];
      }
      var result = fs.existsSync(file) && fs.statSync(file).isFile();
      if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
        filenessCache[file] = result;
      }
      return result;
    }
    function eachParent(file, callback) {
      var dir = isFile(file) ? path.dirname(file) : file;
      var loc = path.resolve(dir);
      do {
        if (!pathInRoot(loc)) break;
        var result = callback(loc);
        if (typeof result !== "undefined") return result;
      } while (loc !== (loc = path.dirname(loc)));
      return void 0;
    }
    function pathInRoot(p) {
      if (!process.env.BROWSERSLIST_ROOT_PATH) return true;
      var rootPath = path.resolve(process.env.BROWSERSLIST_ROOT_PATH);
      if (path.relative(rootPath, p).substring(0, 2) === "..") {
        return false;
      }
      return true;
    }
    function check(section) {
      if (Array.isArray(section)) {
        for (var i = 0; i < section.length; i++) {
          if (typeof section[i] !== "string") {
            throw new BrowserslistError(FORMAT);
          }
        }
      } else if (typeof section !== "string") {
        throw new BrowserslistError(FORMAT);
      }
    }
    function pickEnv(config, opts) {
      if (typeof config !== "object") return config;
      var name;
      if (typeof opts.env === "string") {
        name = opts.env;
      } else if (process.env.BROWSERSLIST_ENV) {
        name = process.env.BROWSERSLIST_ENV;
      } else if (process.env.NODE_ENV) {
        name = process.env.NODE_ENV;
      } else {
        name = "production";
      }
      if (opts.throwOnMissing) {
        if (name && name !== "defaults" && !config[name]) {
          throw new BrowserslistError(
            "Missing config for Browserslist environment `" + name + "`"
          );
        }
      }
      return config[name] || config.defaults;
    }
    function parsePackage(file) {
      var config = JSON.parse(
        fs.readFileSync(file).toString().replace(/^\uFEFF/m, "")
      );
      if (config.browserlist && !config.browserslist) {
        throw new BrowserslistError(
          "`browserlist` key instead of `browserslist` in " + file
        );
      }
      var list = config.browserslist;
      if (Array.isArray(list) || typeof list === "string") {
        list = { defaults: list };
      }
      for (var i in list) {
        check(list[i]);
      }
      return list;
    }
    function parsePackageOrReadConfig(file) {
      if (path.basename(file) === "package.json") {
        return parsePackage(file);
      } else {
        return module2.exports.readConfig(file);
      }
    }
    function latestReleaseTime(agents) {
      var latest = 0;
      for (var name in agents) {
        var dates = agents[name].releaseDate || {};
        for (var key in dates) {
          if (latest < dates[key]) {
            latest = dates[key];
          }
        }
      }
      return latest * 1e3;
    }
    function normalizeStats(data, stats) {
      if (!data) {
        data = {};
      }
      if (stats && "dataByBrowser" in stats) {
        stats = stats.dataByBrowser;
      }
      if (typeof stats !== "object") return void 0;
      var normalized = {};
      for (var i in stats) {
        var versions = Object.keys(stats[i]);
        if (versions.length === 1 && data[i] && data[i].versions.length === 1) {
          var normal = data[i].versions[0];
          normalized[i] = {};
          normalized[i][normal] = stats[i][versions[0]];
        } else {
          normalized[i] = stats[i];
        }
      }
      return normalized;
    }
    function normalizeUsageData(usageData, data) {
      for (var browser in usageData) {
        var browserUsage = usageData[browser];
        if ("0" in browserUsage) {
          var versions = data[browser].versions;
          browserUsage[versions[versions.length - 1]] = browserUsage[0];
          delete browserUsage[0];
        }
      }
    }
    module2.exports = {
      loadQueries: function loadQueries(ctx, name) {
        if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {
          checkExtend(name);
        }
        var queries = require(require.resolve(name, { paths: [".", ctx.path] }));
        if (queries) {
          if (Array.isArray(queries)) {
            return queries;
          } else if (typeof queries