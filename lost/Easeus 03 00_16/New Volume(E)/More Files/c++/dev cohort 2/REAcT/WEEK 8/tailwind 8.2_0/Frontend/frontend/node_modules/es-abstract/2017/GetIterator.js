_node = {
            type: "Pattern",
            parent: null,
            start,
            end: start,
            raw: "",
            alternatives: [],
        };
        this._backreferences.length = 0;
        this._capturingGroups.length = 0;
    }
    onPatternLeave(start, end) {
        this._node.end = end;
        this._node.raw = this.source.slice(start, end);
        for (const reference of this._backreferences) {
            const ref = reference.ref;
            const groups = typeof ref === "number"
                ? [this._capturingGroups[ref - 1]]
                : this._capturingGroups.filter((g) => g.name === ref);
            if (groups.length === 1) {
                const group = groups[0];
                reference.ambiguous = false;
                reference.resolv